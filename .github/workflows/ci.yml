name: CI

on:
  push:
    branches: [ master ]
    tags-ignore:
      - v*
  pull_request:
    branches: [ master ]
  workflow_call:
    secrets:
      envPAT:
        required: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        channel: [nightly-2025-08-02]
        feature: [default]

    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          if [ "${{matrix.feature}}" = "none" ]
          then
            echo "cargo-options=--no-default-features --verbose --release" >> "$GITHUB_OUTPUT"
          else
            echo "cargo-options=--no-default-features --features ${{matrix.feature}} --verbose" >> "$GITHUB_OUTPUT"
          fi

      - name: Set channel
        run: |
          rustup update
          rustup default ${{matrix.channel}}

      - name: Build (dyn_serde_macro)
        run: cargo build --package dyn_serde_macro ${{steps.strings.outputs.cargo-options}}
      - name: Run tests (dyn_serde_macro)
        shell: bash
        run: cargo test --package dyn_serde_macro ${{steps.strings.outputs.cargo-options}}

      - name: Build (dyn_serde)
        run: cargo build --package dyn_serde ${{steps.strings.outputs.cargo-options}}
      - name: Run tests (dyn_serde)
        shell: bash
        run: cargo test --package dyn_serde ${{steps.strings.outputs.cargo-options}}

      - name: Build (api)
        run: cargo build --package dudes_in_space_api ${{steps.strings.outputs.cargo-options}}
      - name: Run tests (api)
        shell: bash
        run: cargo test --package dudes_in_space_api ${{steps.strings.outputs.cargo-options}}

      - name: Build (core)
        run: cargo build --package dudes_in_space_core ${{steps.strings.outputs.cargo-options}}
      - name: Run tests (core)
        shell: bash
        run: cargo test --package dudes_in_space_core ${{steps.strings.outputs.cargo-options}}
        
      - name: Build (sdl_presenter)
        run: cargo build --package sdl_presenter ${{steps.strings.outputs.cargo-options}}
      - name: Run tests (sdl_presenter)
        shell: bash
        run: cargo test --package sdl_presenter ${{steps.strings.outputs.cargo-options}}
        
      - name: Build (app)
        run: cargo build ${{steps.strings.outputs.cargo-options}}
      - name: Run tests (app)
        shell: bash
        run: cargo test ${{steps.strings.outputs.cargo-options}}

  check-format:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Rust format
        run: cargo fmt --
      - name: Suggest format changes
        uses: reviewdog/action-suggester@v1
        with:
          tool_name: formatters
          level: error
          fail_on_error: true
